#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SR27Module.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SR27d")]
	public partial class sr27DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFD_GROUP(FD_GROUP instance);
    partial void UpdateFD_GROUP(FD_GROUP instance);
    partial void DeleteFD_GROUP(FD_GROUP instance);
    partial void InsertFOOD_DES(FOOD_DES instance);
    partial void UpdateFOOD_DES(FOOD_DES instance);
    partial void DeleteFOOD_DES(FOOD_DES instance);
    partial void InsertNUT_DATA(NUT_DATA instance);
    partial void UpdateNUT_DATA(NUT_DATA instance);
    partial void DeleteNUT_DATA(NUT_DATA instance);
    partial void InsertNUTR_DEF(NUTR_DEF instance);
    partial void UpdateNUTR_DEF(NUTR_DEF instance);
    partial void DeleteNUTR_DEF(NUTR_DEF instance);
    #endregion
		
		public sr27DataContext() : 
				base(global::SR27Module.Properties.Settings.Default.SR27dConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public sr27DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sr27DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sr27DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public sr27DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FD_GROUP> FD_GROUPs
		{
			get
			{
				return this.GetTable<FD_GROUP>();
			}
		}
		
		public System.Data.Linq.Table<FOOD_DES> FOOD_DES
		{
			get
			{
				return this.GetTable<FOOD_DES>();
			}
		}
		
		public System.Data.Linq.Table<NUT_DATA> NUT_DATAs
		{
			get
			{
				return this.GetTable<NUT_DATA>();
			}
		}
		
		public System.Data.Linq.Table<NUTR_DEF> NUTR_DEFs
		{
			get
			{
				return this.GetTable<NUTR_DEF>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FD_GROUP")]
	public partial class FD_GROUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _FdGrp_CD = default(short);
		
		private string _FdGrp_Desc = default(string);
		
		private EntitySet<FOOD_DES> _FOOD_DES;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public FD_GROUP()
		{
			this._FOOD_DES = new EntitySet<FOOD_DES>(new Action<FOOD_DES>(this.attach_FOOD_DES), new Action<FOOD_DES>(this.detach_FOOD_DES));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FdGrp_CD", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public short FdGrp_CD
		{
			get
			{
				return this._FdGrp_CD;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FdGrp_Desc", DbType="NVarChar(60)", UpdateCheck=UpdateCheck.Never)]
		public string FdGrp_Desc
		{
			get
			{
				return this._FdGrp_Desc;
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FD_GROUP_FOOD_DE", Storage="_FOOD_DES", ThisKey="FdGrp_CD", OtherKey="FdGrp_Cd")]
		public EntitySet<FOOD_DES> FOOD_DES
		{
			get
			{
				return this._FOOD_DES;
			}
			set
			{
				this._FOOD_DES.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FOOD_DES(FOOD_DES entity)
		{
			this.SendPropertyChanging();
			entity.FD_GROUP = this;
		}
		
		private void detach_FOOD_DES(FOOD_DES entity)
		{
			this.SendPropertyChanging();
			entity.FD_GROUP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FOOD_DES")]
	public partial class FOOD_DES : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NDB_No = default(int);
		
		private short _FdGrp_Cd = default(short);
		
		private string _Long_Desc = default(string);
		
		private EntitySet<NUT_DATA> _NUT_DATAs;
		
		private EntityRef<FD_GROUP> _FD_GROUP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public FOOD_DES()
		{
			this._NUT_DATAs = new EntitySet<NUT_DATA>(new Action<NUT_DATA>(this.attach_NUT_DATAs), new Action<NUT_DATA>(this.detach_NUT_DATAs));
			this._FD_GROUP = default(EntityRef<FD_GROUP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDB_No", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int NDB_No
		{
			get
			{
				return this._NDB_No;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FdGrp_Cd", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short FdGrp_Cd
		{
			get
			{
				return this._FdGrp_Cd;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Long_Desc", DbType="NVarChar(200)", UpdateCheck=UpdateCheck.Never)]
		public string Long_Desc
		{
			get
			{
				return this._Long_Desc;
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FOOD_DE_NUT_DATA", Storage="_NUT_DATAs", ThisKey="NDB_No", OtherKey="NDB_No")]
		public EntitySet<NUT_DATA> NUT_DATAs
		{
			get
			{
				return this._NUT_DATAs;
			}
			set
			{
				this._NUT_DATAs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FD_GROUP_FOOD_DE", Storage="_FD_GROUP", ThisKey="FdGrp_Cd", OtherKey="FdGrp_CD", IsForeignKey=true)]
		public FD_GROUP FD_GROUP
		{
			get
			{
				return this._FD_GROUP.Entity;
			}
			set
			{
				FD_GROUP previousValue = this._FD_GROUP.Entity;
				if (((previousValue != value) 
							|| (this._FD_GROUP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FD_GROUP.Entity = null;
						previousValue.FOOD_DES.Remove(this);
					}
					this._FD_GROUP.Entity = value;
					if ((value != null))
					{
						value.FOOD_DES.Add(this);
						this._FdGrp_Cd = value.FdGrp_CD;
					}
					else
					{
						this._FdGrp_Cd = default(short);
					}
					this.SendPropertyChanged("FD_GROUP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NUT_DATAs(NUT_DATA entity)
		{
			this.SendPropertyChanging();
			entity.FOOD_DES = this;
		}
		
		private void detach_NUT_DATAs(NUT_DATA entity)
		{
			this.SendPropertyChanging();
			entity.FOOD_DES = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NUT_DATA")]
	public partial class NUT_DATA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NDB_No = default(int);
		
		private short _Nutr_No = default(short);
		
		private System.Nullable<float> _Nutr_Val = default(System.Nullable<float>);
		
		private EntityRef<FOOD_DES> _FOOD_DES;
		
		private EntityRef<NUTR_DEF> _NUTR_DEF;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public NUT_DATA()
		{
			this._FOOD_DES = default(EntityRef<FOOD_DES>);
			this._NUTR_DEF = default(EntityRef<NUTR_DEF>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDB_No", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int NDB_No
		{
			get
			{
				return this._NDB_No;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nutr_No", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public short Nutr_No
		{
			get
			{
				return this._Nutr_No;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nutr_Val", DbType="Real", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<float> Nutr_Val
		{
			get
			{
				return this._Nutr_Val;
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FOOD_DE_NUT_DATA", Storage="_FOOD_DES", ThisKey="NDB_No", OtherKey="NDB_No", IsForeignKey=true)]
		public FOOD_DES FOOD_DES
		{
			get
			{
				return this._FOOD_DES.Entity;
			}
			set
			{
				FOOD_DES previousValue = this._FOOD_DES.Entity;
				if (((previousValue != value) 
							|| (this._FOOD_DES.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FOOD_DES.Entity = null;
						previousValue.NUT_DATAs.Remove(this);
					}
					this._FOOD_DES.Entity = value;
					if ((value != null))
					{
						value.NUT_DATAs.Add(this);
						this._NDB_No = value.NDB_No;
					}
					else
					{
						this._NDB_No = default(int);
					}
					this.SendPropertyChanged("FOOD_DES");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NUTR_DEF_NUT_DATA", Storage="_NUTR_DEF", ThisKey="Nutr_No", OtherKey="Nutr_No", IsForeignKey=true)]
		public NUTR_DEF NUTR_DEF
		{
			get
			{
				return this._NUTR_DEF.Entity;
			}
			set
			{
				NUTR_DEF previousValue = this._NUTR_DEF.Entity;
				if (((previousValue != value) 
							|| (this._NUTR_DEF.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NUTR_DEF.Entity = null;
						previousValue.NUT_DATAs.Remove(this);
					}
					this._NUTR_DEF.Entity = value;
					if ((value != null))
					{
						value.NUT_DATAs.Add(this);
						this._Nutr_No = value.Nutr_No;
					}
					else
					{
						this._Nutr_No = default(short);
					}
					this.SendPropertyChanged("NUTR_DEF");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NUTR_DEF")]
	public partial class NUTR_DEF : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Nutr_No = default(short);
		
		private string _Units = default(string);
		
		private string _Tagname = default(string);
		
		private string _NutrDesc = default(string);
		
		private short _Num_Dec = default(short);
		
		private EntitySet<NUT_DATA> _NUT_DATAs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public NUTR_DEF()
		{
			this._NUT_DATAs = new EntitySet<NUT_DATA>(new Action<NUT_DATA>(this.attach_NUT_DATAs), new Action<NUT_DATA>(this.detach_NUT_DATAs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nutr_No", DbType="SmallInt NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public short Nutr_No
		{
			get
			{
				return this._Nutr_No;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Units", DbType="NVarChar(7) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Units
		{
			get
			{
				return this._Units;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tagname", DbType="NVarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Tagname
		{
			get
			{
				return this._Tagname;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NutrDesc", DbType="NVarChar(60) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string NutrDesc
		{
			get
			{
				return this._NutrDesc;
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num_Dec", DbType="SmallInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public short Num_Dec
		{
			get
			{
				return this._Num_Dec;
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NUTR_DEF_NUT_DATA", Storage="_NUT_DATAs", ThisKey="Nutr_No", OtherKey="Nutr_No")]
		public EntitySet<NUT_DATA> NUT_DATAs
		{
			get
			{
				return this._NUT_DATAs;
			}
			set
			{
				this._NUT_DATAs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NUT_DATAs(NUT_DATA entity)
		{
			this.SendPropertyChanging();
			entity.NUTR_DEF = this;
		}
		
		private void detach_NUT_DATAs(NUT_DATA entity)
		{
			this.SendPropertyChanging();
			entity.NUTR_DEF = null;
		}
	}
}
#pragma warning restore 1591
